<html>
    <head>
        <title>
            Strong goldbach conjecture finder
        </title>
    </head>
    <body>
        <script>
            let n
            let j
            let pairs
            let result
            function isPrime(x){
                if (x >= 0 && Number.isInteger(x)) {
                    if(x <= 1) return false;
                    if(x <= 3) return true;
                    if(x % 2 === 0 || x % 3 === 0) return false;
                    for(let m = 5; m * m <= x; m += 6){
                        if(x % m === 0 || x % (m + 2) === 0) return false;
                    }
                    return true;
                } else {
                    return false;
                }
            }
            function sgolbach(y) {
                if (y <= 2 || y % 2 !== 0 || !Number.isInteger(y)) return null;
                pairs = []
                for (let i = 2; i <= y / 2; i++) {
                    j = y - i
                    if(isPrime(i) && isPrime(j)){
                        pairs.push([i,j])
                    }
                    console.log("tested for i = " + i + "; the max value of i will be "+ y / 2 +"; the number is "+y)
                }
                return pairs;
            }
            function checkg(){
                n = parseInt(prompt("Choose the even number you want to find the pair of primes for"))
                result = sgolbach(n)
                if (!result || result.length === 0) {
                    alert("invalid input or no prime pair found")
                }else{
                    alert(result[0] + " and "+ result[1]+" are examples of two primes who add up too "+n)
                }
            }
        </script>
        <h1>
            The strong goldbach conjecture states that any even positive integer can be written as the sum of two primes
        </h1>
        <button onclick="checkg()">
            find the pair of primes that add up to the even integer of your choice
        </button>
    </body>
</html>